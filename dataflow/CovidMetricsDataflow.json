{
	"name": "CovidMetricsDataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSqlCovid_MetricsParquet",
						"type": "DatasetReference"
					},
					"name": "AzureCovidMetrics"
				}
			],
			"sinks": [
				{
					"name": "Recoveries"
				},
				{
					"dataset": {
						"referenceName": "CasesParquet",
						"type": "DatasetReference"
					},
					"name": "Cases"
				},
				{
					"dataset": {
						"referenceName": "PoliciesParquet",
						"type": "DatasetReference"
					},
					"name": "Policies"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "select1"
				},
				{
					"name": "union2"
				},
				{
					"name": "select2"
				},
				{
					"name": "union3"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> AzureCovidMetrics",
				"AzureCovidMetrics union(byName: true)~> union1",
				"union1 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"AzureCovidMetrics union(byName: true)~> union2",
				"union2 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"AzureCovidMetrics union(byName: true)~> union3",
				"union3 derive() ~> derivedColumn1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Recoveries",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Country as string,",
				"          CountryCode as string,",
				"          Latitude as decimal(10,5),",
				"          Longitude as decimal(10,5)",
				"     ),",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Cases",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Policies"
			]
		}
	}
}